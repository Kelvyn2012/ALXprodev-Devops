#!/bin/bash

# Script: batchProcessing-0x04
# Description: Fetch data for multiple Pokémon in parallel and manage background processes.

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
BASE_URL="https://pokeapi.co/api/v2/pokemon"
OUTPUT_DIR="pokemon_data_parallel"

# Create directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"

# Function to fetch Pokémon data
fetch_pokemon() {
    local pokemon=$1
    echo "Fetching data for $pokemon..."
    
    response=$(curl -s -w "%{http_code}" -o "$OUTPUT_DIR/$pokemon.json" "$BASE_URL/$pokemon")

    if [ "$response" -eq 200 ]; then
        echo "Saved data to $OUTPUT_DIR/$pokemon.json ✅"
    else
        echo "❌ Failed to fetch data for $pokemon (HTTP $response)" >> "$OUTPUT_DIR/errors.txt"
    fi
}

# Array to store process IDs
pids=()

# Start background processes
for pokemon in "${POKEMONS[@]}"; do
    fetch_pokemon "$pokemon" &
    pids+=($!)
done

# Wait for all processes to complete
for pid in "${pids[@]}"; do
    wait "$pid" || {
        echo "⚠️  Process $pid failed, terminating remaining background jobs..."
        kill "${pids[@]}" 2>/dev/null
        break
    }
done

echo ""
echo "✅ All Pokémon data fetched and saved in '$OUTPUT_DIR/'"
